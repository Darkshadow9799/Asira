# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Create Asira Production Build

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**/README.md'
    - 'asirafront/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - '**/README.md'
    - 'asirafront/**'

jobs:
   version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: git fetch --unshallow --tags

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.10
      with:
        versionSpec: '5.x'

    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.10

    - name: Create version.txt with nuGetVersion
      run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

    - name: Upload version.txt
      uses: actions/upload-artifact@v2
      with:
        name: gitversion
        path: version.txt
  
   build:
    runs-on: ubuntu-latest
    needs: [ version ]
    steps:
    - name: Start up
      uses: actions/checkout@v2
    - name: Node set up
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: gradle
    - name: Get version.txt
      uses: actions/download-artifact@v2
      with:
        name: gitversion
    - name: Create new file without newline char from version.txt
      run: tr -d '\n' < version.txt > version1.txt
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version1.txt
    - name: Grant execute permission for gradlew
      run: chmod +x ./asira/gradlew
    - name: Build war file with Gradle
      run: |
        cd ./asira
        git init
        ./gradlew -Pprod -Pwar clean bootWar -x test
    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: "asira/build/libs/asira-0.0.1-SNAPSHOT.war"
        token: ${{ secrets.TOKEN }}
        tag: ${{ steps.version.outputs.content }}
        commit: ${{ github.sha }}
        prerelease: false  
    - name: Upload war
      uses: actions/upload-artifact@v2
      with:
        name: appbundle
        path: asira/build/libs/asira-0.0.1-SNAPSHOT.war
